{"version":3,"sources":["sounds/error.mp3","Key.js","Timer.js","Statistic.js","App.js","StatisticList.js","reportWebVitals.js","index.js"],"names":["Key","state","valueEn","props","valueRu","currentCode","code","isPressed","keyboardTheme","this","setState","PrevProps","className","style","backgroundColor","React","Component","Timer","hours","minutes","seconds","textLength","tick","bind","getSeconds","prevProps","isStart","timerID","setInterval","clearInterval","substr","Statistic","log","date","time","symbols","timer","mystakes","speed","App","text","count","mystakeCount","value","keys","space","isEnd","keyboardThemeCount","handleChange","handleCode","handleChangeTheme","audio","Audio","event","length","currentTarget","secondPart","slice","play","map","item","id","type","onChange","onKeyPress","onClick","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","logs","document","getElementById"],"mappings":"qOAAe,G,MAAA,IAA0B,mC,OC+C1BA,E,4MAxCXC,MAAQ,CACJC,QAAS,EAAKC,MAAMD,QACpBE,QAAS,EAAKD,MAAMC,QACpBC,YAAa,EACbC,KAAM,EAAKH,MAAMG,KACjBC,WAAW,EACXC,cAAe,EAAKL,MAAMK,e,uDAG9B,WACIC,KAAKC,SAAS,CACVL,YAAaI,KAAKN,MAAME,gB,gCAIhC,SAAmBM,GACXF,KAAKR,MAAMI,cAAgBM,EAAUN,aAAeI,KAAKN,MAAMK,gBAAkBG,EAAUH,eAC3FC,KAAKC,SAAS,CACVL,YAAaI,KAAKN,MAAME,YACxBE,WAAYE,KAAKR,MAAMM,UACvBC,cAAeC,KAAKN,MAAMK,kB,oBAQtC,WACI,OACI,sBAAKI,UAAWH,KAAKR,MAAMO,cAAeK,MAAOJ,KAAKR,MAAMI,cAAgBI,KAAKR,MAAMK,KAAO,CAAEQ,gBAAiB,SAAY,GAA7H,UACI,sBAAMF,UAAU,UAAhB,SAA2BH,KAAKR,MAAMC,UACtC,sBAAMU,UAAU,UAAhB,SAA2BH,KAAKR,MAAMG,iB,GApCpCW,IAAMC,WC4ETC,E,kDAzEX,WAAYd,GAAQ,IAAD,8BACf,cAAMA,IAIVF,MAAQ,CACJiB,MAAO,EACPC,QAAS,EACTC,QAAS,EACTC,WAAY,EAAKlB,MAAMkB,YAPvB,EAAKC,KAAO,EAAKA,KAAKC,KAAV,gBAFG,E,wCAYnB,WAE+B,KAAvBd,KAAKR,MAAMkB,QACXV,KAAKC,SAAS,CACVQ,MAAOT,KAAKR,MAAMiB,MAAQ,EAC1BC,QAAS,IAKc,KAAvBV,KAAKR,MAAMmB,QACXX,KAAKC,SAAS,CACVS,QAASV,KAAKR,MAAMkB,QAAU,EAC9BC,QAAS,IAGbX,KAAKC,SAAS,CACVU,QAASX,KAAKR,MAAMmB,QAAU,IAM1CX,KAAKN,MAAMqB,WAAWf,KAAKR,MAAMiB,MAAOT,KAAKR,MAAMkB,QAASV,KAAKR,MAAMmB,W,gCAQ3E,SAAmBK,GACXhB,KAAKN,MAAMuB,UAAYD,EAAUC,UACjCjB,KAAKkB,QAAUC,YAAYnB,KAAKa,KAAM,MAIZ,IAA1Bb,KAAKN,MAAMkB,YACXQ,cAAcpB,KAAKkB,W,oBAU3B,WAEI,OACI,iCACI,kCAAQ,IAAMlB,KAAKR,MAAMiB,OAAOY,QAAQ,GAAxC,SACA,kCAAQ,IAAMrB,KAAKR,MAAMkB,SAASW,QAAQ,GAA1C,SACA,gCAAQ,IAAMrB,KAAKR,MAAMmB,SAASU,QAAQ,Y,GApEtCf,IAAMC,WCsBXe,E,4MArBX9B,MAAQ,CAGJ+B,IAAK,EAAK7B,MAAM6B,K,4CAGpB,WACI,OACI,sBAAKpB,UAAU,MAAf,UACI,gCAAMH,KAAKN,MAAM6B,IAAIC,KAArB,IAA4BxB,KAAKN,MAAM6B,IAAIE,QAC3C,wJAA4BzB,KAAKN,MAAM6B,IAAIG,WAC3C,sIAAyB1B,KAAKN,MAAM6B,IAAII,SACxC,yEAAc3B,KAAKN,MAAM6B,IAAIK,YAC7B,yGAAqB5B,KAAKN,MAAM6B,IAAIM,gB,GAf5BvB,IAAMC,WCuHfuB,GCtHaxB,IAAMC,U,kDDOhC,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IASRF,MAAQ,CACNuC,KAAM,EAAKrC,MAAMqC,KACjBC,MAAO,EACPC,aAAc,EACdC,MAAO,GACPC,KAAM,EAAKzC,MAAMyC,KACjBC,MAAO,EAAK1C,MAAM0C,MAClBxC,YAAa,EACbqB,SAAS,EACToB,OAAO,EACPtC,cAAe,CAAC,QAAS,QAAS,QAClCuC,mBAAoB,EACpBT,MAAO,GApBP,EAAKU,aAAe,EAAKA,aAAazB,KAAlB,gBACpB,EAAK0B,WAAa,EAAKA,WAAW1B,KAAhB,gBAClB,EAAK2B,kBAAoB,EAAKA,kBAAkB3B,KAAvB,gBACzB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAK4B,MAAQ,IAAIC,MAAMD,GANN,E,qDA0BnB,WACwC,IAAlC1C,KAAKR,MAAM8C,mBACbtC,KAAKC,SAAS,CACZqC,mBAAoB,IAItBtC,KAAKC,SAAS,CACZqC,mBAAoBtC,KAAKR,MAAM8C,mBAAqB,M,0BAO1D,SAAaM,GASX,GAAI5C,KAAKR,MAAMuC,KAAKc,OAAS,EAC3B,GAAID,EAAME,cAAcZ,MAAMlC,KAAKR,MAAMwC,SAAWhC,KAAKR,MAAMuC,KAAK,GAAI,CACtE,IAAMgB,EAAa/C,KAAKR,MAAMuC,KAAKiB,MAAM,EAAGhD,KAAKR,MAAMuC,KAAKc,QAC5D7C,KAAKC,SAAS,CACZ8B,KAAMgB,EACNb,MAAOU,EAAME,cAAcZ,MAC3BF,MAAOhC,KAAKR,MAAMwC,MAAQ,EAC1Bf,SAAS,SAGXjB,KAAK0C,MAAMO,OACXjD,KAAKC,SAAS,CACZgC,aAAcjC,KAAKR,MAAMyC,aAAe,SAI5CjC,KAAKC,SAAS,CACZoC,OAAO,M,wBAOb,SAAWO,GACT5C,KAAKC,SAAS,CACZL,YAAagD,EAAM/C,S,wBAKvB,SAAWY,EAAOC,EAASC,GACzB,IAAMkB,EAAQ7B,KAAKR,MAAM0C,MAAMW,QAAWlC,EAAqB,GAAVD,EAAyB,KAARD,GACtET,KAAKC,SAAS,CACZ4B,MAAOA,M,oBAMX,WAAU,IAAD,OACDM,EAAOnC,KAAKR,MAAM2C,KAAKe,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAmB1D,QAAS0D,EAAK1D,QAASE,QAASwD,EAAKxD,QAASE,KAAMsD,EAAKtD,KAAMD,YAAa,EAAKJ,MAAMI,YAAaG,cAAe,EAAKP,MAAMO,cAAc,EAAKP,MAAM8C,qBAAhKa,EAAKC,OAClDhB,EAAQ,cAAC,EAAD,CAA+B3C,QAASO,KAAKR,MAAM4C,MAAM3C,QAASE,QAASK,KAAKR,MAAM4C,MAAMzC,QAASE,KAAMG,KAAKR,MAAM4C,MAAMvC,KAAMD,YAAaI,KAAKR,MAAMI,YAAaG,cAAeC,KAAKR,MAAMO,cAAcC,KAAKR,MAAM8C,qBAAhNtC,KAAKR,MAAM4C,MAAMgB,IACzC,OACE,sBAAKjD,UAAU,YAAf,UAEE,sBAAKA,UAAU,OAAf,UACE,gCAAK,sBAAMA,UAAU,YAAhB,SAA6BH,KAAKR,MAAM0C,QAAclC,KAAKR,MAAMuC,QACtE,0BAAU5B,UAAU,WAAWkD,KAAK,OAAOnB,MAAOlC,KAAKR,MAAM0C,MAAOoB,SAAUtD,KAAKuC,aAAcgB,WAAYvD,KAAKwC,aAClH,sIAAyBxC,KAAKR,MAAMyC,aAApC,OACA,yEAAa,cAAC,EAAD,CAAOhB,QAASjB,KAAKR,MAAMyB,QAASL,WAAYZ,KAAKR,MAAMuC,KAAKc,OAAQ9B,WAAYf,KAAKe,aAAtG,UAEF,qBAAKZ,UAAU,OAAf,SAAuBgC,IACvB,qBAAKhC,UAAU,QAAf,SAAwBiC,IACxB,wBAAQoB,QAASxD,KAAKyC,kBAAtB,iFACA,sBAAKtC,UAAU,GAAf,qJAA+CsD,KAAKC,MAAM1D,KAAKR,MAAMqC,OAArE,2CAAuF4B,KAAKC,MAAyB,GAAnB1D,KAAKR,MAAMqC,OAA7G,oD,GA3GUvB,IAAMC,YEGToD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OC8OdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKvC,KA3NI,s3DA2NQI,KAvNR,CACX,CACEiB,GAAI,EACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,EACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,EACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,EACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,EACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,EACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,EACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,EACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,EACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,cACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,eACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,YACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,QACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,OACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,QACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,SACNJ,QAAS,IACTE,QAAS,UAEX,CACEyD,GAAI,GACJvD,KAAM,QACNJ,QAAS,IACTE,QAAS,MAkBoByC,MAV/B,CACEgB,GAAI,GACJvD,KAAM,QACNJ,QAAS,GACTE,QAAS,IAMkC4E,KAjPlC,CACX,CACEnB,GAAI,EACJ5B,KAAM,2BACNC,KAAM,iCACNC,QAAS,IACTC,MAAO,WACPC,SAAU,EACVC,MAAO,IAGT,CACEuB,GAAI,EACJ5B,KAAM,2BACNC,KAAM,iCACNC,QAAS,IACTC,MAAO,WACPC,SAAU,EACVC,MAAO,SAiOT2C,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.6d8df5cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.8ad17092.mp3\";","import React from 'react'\r\n\r\n\r\nclass Key extends React.Component {\r\n\r\n\r\n\r\n    state = {\r\n        valueEn: this.props.valueEn,\r\n        valueRu: this.props.valueRu,\r\n        currentCode: 0,\r\n        code: this.props.code,\r\n        isPressed: false,\r\n        keyboardTheme: this.props.keyboardTheme\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            currentCode: this.props.currentCode,\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(PrevProps) {\r\n        if (this.state.currentCode !== PrevProps.currentCode || this.props.keyboardTheme !== PrevProps.keyboardTheme) {\r\n            this.setState({\r\n                currentCode: this.props.currentCode,\r\n                isPressed: !this.state.isPressed,\r\n                keyboardTheme: this.props.keyboardTheme\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n \r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.keyboardTheme} style={this.state.currentCode === this.state.code ? { backgroundColor: 'green' } : {}} >\r\n                <span className='valueEn'>{this.state.valueEn}</span>\r\n                <span className='valueRu'>{this.state.valueRu}</span>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Key","import React from 'react'\r\n\r\n\r\n\r\nclass Timer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.tick = this.tick.bind(this)\r\n    }\r\n\r\n    state = {\r\n        hours: 0,\r\n        minutes: 0,\r\n        seconds: 0,\r\n        textLength: this.props.textLength\r\n    }\r\n\r\n    tick() {\r\n       \r\n        if (this.state.minutes === 60) {\r\n            this.setState({\r\n                hours: this.state.hours + 1,\r\n                minutes: 0\r\n            })\r\n        } else {\r\n\r\n\r\n            if (this.state.seconds === 59) {\r\n                this.setState({\r\n                    minutes: this.state.minutes + 1,\r\n                    seconds: 0\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    seconds: this.state.seconds + 1\r\n                })\r\n            }\r\n\r\n\r\n        }\r\n        this.props.getSeconds(this.state.hours, this.state.minutes, this.state.seconds)\r\n    }\r\n\r\n    // componentDidUnmount() {\r\n    //     this.timerID = setInterval(this.tick, 1000)\r\n    // }\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.isStart !== prevProps.isStart) {\r\n            this.timerID = setInterval(this.tick, 1000)\r\n         \r\n        }\r\n\r\n        if (this.props.textLength === 0) {\r\n            clearInterval(this.timerID)\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    // componentWillUnmount() {\r\n    //     clearInterval(this.timerID)\r\n    // }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <span>\r\n                <span>{('0' + this.state.hours).substr(-2)} : </span>\r\n                <span>{('0' + this.state.minutes).substr(-2)} : </span>\r\n                <span>{('0' + this.state.seconds).substr(-2)}</span>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Timer","import React from 'react'\r\n\r\n\r\nclass Statistic extends React.Component {\r\n\r\n    state = {\r\n        // date: new Date().toLocaleDateString(),\r\n        // time: new Date().toLocaleTimeString(),\r\n        log: this.props.log\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='log'>\r\n                <div>{this.props.log.date} {this.props.log.time}</div>\r\n                <div>Колличество символов: {this.props.log.symbols}</div>\r\n                <div>Затраченное время: {this.props.log.timer}</div>\r\n                <div>Ошибок: {this.props.log.mystakes}</div>\r\n                <div>слов в минуту: {this.props.log.speed}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Statistic","import React from 'react'\nimport './App.css';\nimport audio from './sounds/error.mp3'\n\nimport Key from './Key.js'\nimport Timer from './Timer.js'\nimport StatisticList from './StatisticList.js'\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleCode = this.handleCode.bind(this)\n    this.handleChangeTheme = this.handleChangeTheme.bind(this)\n    this.getSeconds = this.getSeconds.bind(this)\n    this.audio = new Audio(audio)\n  }\n\n\n  state = {\n    text: this.props.text,\n    count: 0,\n    mystakeCount: 0,\n    value: '',\n    keys: this.props.keys,\n    space: this.props.space,\n    currentCode: 0,\n    isStart: false,\n    isEnd: false,\n    keyboardTheme: ['black', 'white', 'pink'],\n    keyboardThemeCount: 0,\n    speed: 0,\n  }\n\n\n  handleChangeTheme() {\n    if (this.state.keyboardThemeCount === 2) {\n      this.setState({\n        keyboardThemeCount: 0\n      })\n\n    } else {\n      this.setState({\n        keyboardThemeCount: this.state.keyboardThemeCount + 1\n      })\n    }\n\n  }\n\n\n  handleChange(event) {\n\n\n    // Текст состоит из двух частей, event.currentTarget.value и secondPart, если вторая часть не равна нулю, то метод срабатывает,\n    // это нужно для того чтобы в конце, когда весь текст написан(весь текст равен event.currentTarget.value а secondPart == 0 ), \n    // нельзя было производить манипуляции c event.currentTarget.value типа удаления и повторного написания текста.\n    // итак мы вводим текст с каждым нажатием клавиши у имеющегося текста первый символ удаляется, вперёд него рендерится введённый символ\n    // со своей стилизацией, count нужен чтобы знать какой символ сравнивать, можно и по другому вычислить последний введённый символ, \n    // isStart нужен для таймера.\n    if (this.state.text.length > 0) {\n      if (event.currentTarget.value[this.state.count] === this.state.text[0]) {\n        const secondPart = this.state.text.slice(1, this.state.text.length)\n        this.setState({\n          text: secondPart,\n          value: event.currentTarget.value,\n          count: this.state.count + 1,\n          isStart: true\n        })\n      } else {\n        this.audio.play()\n        this.setState({\n          mystakeCount: this.state.mystakeCount + 1\n        })\n      }\n    } else {\n      this.setState({\n        isEnd: true\n      })\n    }\n\n\n  }\n\n  handleCode(event) {\n    this.setState({\n      currentCode: event.code\n    })\n\n  }\n\n  getSeconds(hours, minutes, seconds){\n    const speed = this.state.value.length / ( seconds + (minutes * 60) + (hours * 3600))\n    this.setState({\n      speed: speed\n    })\n  }\n\n\n\n  render() {\n    const keys = this.state.keys.map(item => <Key key={item.id} valueEn={item.valueEn} valueRu={item.valueRu} code={item.code} currentCode={this.state.currentCode} keyboardTheme={this.state.keyboardTheme[this.state.keyboardThemeCount]}/>)\n    const space = <Key key={this.state.space.id} valueEn={this.state.space.valueEn} valueRu={this.state.space.valueRu} code={this.state.space.code} currentCode={this.state.currentCode} keyboardTheme={this.state.keyboardTheme[this.state.keyboardThemeCount]}/>\n    return (\n      <div className='container'>\n        {/* <StatisticList logs={this.props.logs} valueLength={this.state.value.length} isEnd={this.state.isEnd}/> */}\n        <div className='text'>\n          <div><span className='greenText'>{this.state.value}</span>{this.state.text}</div>\n          <textarea className='textarea' type='text' value={this.state.value} onChange={this.handleChange} onKeyPress={this.handleCode}></textarea>\n          <div>Количество ошибок: {this.state.mystakeCount} </div>\n          <div>Таймер: <Timer isStart={this.state.isStart} textLength={this.state.text.length} getSeconds={this.getSeconds}/> </div>\n        </div>\n        <div className='keys'>{keys}</div>\n        <div className='space'>{space}</div>\n        <button onClick={this.handleChangeTheme}>Сменить тему</button>\n        <div className='' >Скорость печати примерно: { Math.round(this.state.speed)} сим/сек ({Math.round(this.state.speed * 60)} сим/мин)</div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react'\r\nimport Statistic from './Statistic.js'\r\n\r\n\r\nclass StatisticList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleAdd = this.handleAdd.bind(this)\r\n    }\r\n\r\n    state = {\r\n        logs: this.props.logs\r\n    }\r\n\r\n    handleAdd() {\r\n        const newStatistic = (this.state.logs).slice()\r\n        newStatistic.unshift({\r\n            id: this.state.logs.length + 1,\r\n            date: new Date().toLocaleDateString(),\r\n            time: new Date().toLocaleTimeString(),\r\n            symbols: this.props.valueLength,\r\n            timer: '00:04:23',\r\n            mystakes: 33,\r\n            speed: 3\r\n        })\r\n\r\n        this.setState({\r\n            logs: newStatistic\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.isEnd !== prevProps.isEnd) {\r\n            this.handleAdd()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const list = this.state.logs.map(item => <Statistic key={item.id} log={item} />)\r\n        return (\r\n            <div>\r\n                <div className='statistic'>\r\n                    <div className='logContainer'>\r\n                        {list}\r\n                    </div>\r\n\r\n                </div>\r\n                <button className='test' onClick={this.handleAdd}>Добавить новый лог</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default StatisticList","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst logs = [\n  {\n    id: 2,\n    date: 'дата',\n    time: 'время',\n    symbols: 267,\n    timer: '01:02:03',\n    mystakes: 3,\n    speed: 23\n  },\n\n  {\n    id: 1,\n    date: 'дата',\n    time: 'время',\n    symbols: 234,\n    timer: '01:02:03',\n    mystakes: 4,\n    speed: 45\n  }\n]\n\nconst text = 'На дворе играла кошка с котятами. Вдруг с вышины бросился огромный орел. Орел схватил котенка. Мать кошка быстро вцепилась в орла. Орел бросил котенка и стал бороться с кошкой. Он рвал когтями тело кошки и выклевал ей один глаз. Кошка храбро боролась с орлом. Она перекусила ему крыло. Потом кошка сделала ловкий прыжок и перекусила орлу горло. Так кошка спасла своего котенка.'\n// const text = 'There are many big and small libraries everywhere in our country. They have millions of books in different languages. You can find there the oldest and the newest books.Every school has a library. Pupils come to the library to take books on different subjects.The school library where Oleg studies is good. It is a large clean room. There are four big windows in it. The walls are light blue. There are a lot of shelves full of books. You can find books on literature, physics, history, chemistry, geography, biology and other subjects. There are books in English, too.On the walls you can see pictures of some great writers and poets.On the table near the window you can always see beautiful spring and autumn flowers.Oleg likes to go to the library. He can always find there something new, something he needs.'\n// const text = 'йцукен'\n\nconst keys = [\n  {\n    id: 1,\n    code: 'KeyQ',\n    valueEn: 'Q',\n    valueRu: 'Й'\n  },\n  {\n    id: 2,\n    code: 'KeyW',\n    valueEn: 'W',\n    valueRu: 'Ц'\n  },\n  {\n    id: 3,\n    code: 'KeyE',\n    valueEn: 'E',\n    valueRu: 'У'\n  },\n  {\n    id: 4,\n    code: 'KeyR',\n    valueEn: 'R',\n    valueRu: 'К'\n  },\n  {\n    id: 5,\n    code: 'KeyT',\n    valueEn: 'T',\n    valueRu: 'Е'\n  },\n  {\n    id: 6,\n    code: 'KeyY',\n    valueEn: 'Y',\n    valueRu: 'Н'\n  },\n  {\n    id: 7,\n    code: 'KeyU',\n    valueEn: 'U',\n    valueRu: 'Г'\n  },\n  {\n    id: 8,\n    code: 'KeyI',\n    valueEn: 'I',\n    valueRu: 'Ш'\n  },\n  {\n    id: 9,\n    code: 'KeyO',\n    valueEn: 'O',\n    valueRu: 'Щ'\n  },\n  {\n    id: 10,\n    code: 'KeyP',\n    valueEn: 'P',\n    valueRu: 'З'\n  },\n  {\n    id: 11,\n    code: 'BracketLeft',\n    valueEn: '{',\n    valueRu: 'Х'\n  },\n  {\n    id: 12,\n    code: 'BracketRight',\n    valueEn: '}',\n    valueRu: 'Ъ'\n  },\n  {\n    id: 13,\n    code: 'KeyA',\n    valueEn: 'A',\n    valueRu: 'Ф'\n  },\n  {\n    id: 14,\n    code: 'KeyS',\n    valueEn: 'S',\n    valueRu: 'Ы'\n  },\n  {\n    id: 15,\n    code: 'KeyD',\n    valueEn: 'D',\n    valueRu: 'В'\n  },\n  {\n    id: 16,\n    code: 'KeyF',\n    valueEn: 'F',\n    valueRu: 'А'\n  },\n  {\n    id: 17,\n    code: 'KeyG',\n    valueEn: 'G',\n    valueRu: 'П'\n  },\n  {\n    id: 18,\n    code: 'KeyH',\n    valueEn: 'H',\n    valueRu: 'Р'\n  },\n  {\n    id: 19,\n    code: 'KeyJ',\n    valueEn: 'J',\n    valueRu: 'О'\n  },\n  {\n    id: 20,\n    code: 'KeyK',\n    valueEn: 'K',\n    valueRu: 'Л'\n  },\n  {\n    id: 21,\n    code: 'KeyL',\n    valueEn: 'L',\n    valueRu: 'Д'\n  },\n  {\n    id: 22,\n    code: 'Semicolon',\n    valueEn: ':',\n    valueRu: 'Ж'\n  },\n  {\n    id: 23,\n    code: 'Quote',\n    valueEn: '\"',\n    valueRu: 'Э'\n  },\n  {\n    id: 24,\n    code: 'KeyZ',\n    valueEn: 'Z',\n    valueRu: 'Я'\n  },\n  {\n    id: 25,\n    code: 'KeyX',\n    valueEn: 'X',\n    valueRu: 'Ч'\n  },\n  {\n    id: 26,\n    code: 'KeyC',\n    valueEn: 'C',\n    valueRu: 'С'\n  },\n  {\n    id: 27,\n    code: 'KeyV',\n    valueEn: 'V',\n    valueRu: 'М'\n  },\n  {\n    id: 28,\n    code: 'KeyB',\n    valueEn: 'B',\n    valueRu: 'И'\n  },\n  {\n    id: 29,\n    code: 'KeyN',\n    valueEn: 'N',\n    valueRu: 'Т'\n  },\n  {\n    id: 30,\n    code: 'KeyM',\n    valueEn: 'M',\n    valueRu: 'Ь'\n  },\n  {\n    id: 31,\n    code: 'Comma',\n    valueEn: '<',\n    valueRu: 'Б'\n  },\n  {\n    id: 32,\n    code: 'Period',\n    valueEn: '>',\n    valueRu: 'Ю'\n  },\n  {\n    id: 33,\n    code: 'Slash',\n    valueEn: '?',\n    valueRu: '.'\n  },\n\n\n\n]\n\nconst space = \n  {\n    id: 34,\n    code: 'Space',\n    valueEn: '',\n    valueRu: ''\n  }\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App text={text} keys={keys} space={space} logs={logs}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}